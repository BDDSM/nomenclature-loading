
//======================================================================================================================
// Обработчики формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//{[+](фрагмент ДОБАВЛЕН), Волокитин Александр Сергеевич 02.12.2019 14:47:33
	// не забыть убрать комментарий.
	//Отказ = НЕ КонтрольПрав.ПравоДоступа_Просмотр(ЭтотОбъект);
КонецПроцедуры

Процедура ПриОткрытии()
	Инициализировать();	
КонецПроцедуры


Процедура Инициализировать()
	//{[+](фрагмент ДОБАВЛЕН), Волокитин Александр Сергеевич 02.12.2019 14:47:33
	// не забыть убрать.
	ПерваяСтрока = 23;
	ПутьКФайлу   = "C:\Users\vas\Desktop\Прайс ООО Оптторг от (1) дял загрузки Веса.xlsx";
	
	КонтрагентСнхронизации = "";
	ПровайдерЗагрузки =  "1C";	
	ПервичнаяНастройка();
	ЗаполнитьСоответствиеКолонок();
	
	// тест
	ОсновныеДействияФормыПрофильПросмотр(Неопределено);
	
КонецПроцедуры	


//======================================================================================================================
// Обработчики кнопок на странице Профиль

Процедура ПутьКФайлуНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогОткрытияФайла=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//ДиалогОткрытияФайла.ПолноеИмяФайла= "";	
	ДиалогОткрытияФайла.Фильтр="Excel(*.xl*)|*.xl*";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() тогда
		ПутьКФайлу=ДиалогОткрытияФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПрофильПросмотр(Кнопка)
	
	ТабДокумент = ЗагрузкаДанныхИзФайла(ПутьКФайлу, ПровайдерЗагрузки);
	Если ТабДокумент <> Неопределено Тогда
		ЭлементыФормы.ПредварительныйПросмотр.Вывести(ТабДокумент);
		//Костыль Ошибка отображение у платформы 1С:Предприятие 8.3 (8.3.12.1790)
		ЭлементыФормы.ПредварительныйПросмотр.Области[0].Шрифт = Новый Шрифт("Arial", 10);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаСвязатьНажатие(Элемент)
	ТекущийНомерКолонки = ЭлементыФормы.ПредварительныйПросмотр.ТекущаяОбласть.Лево;
	СвязатьРазвязатьКолонки(ТекущийНомерКолонки, Истина);
КонецПроцедуры

Процедура КнопкаОтвязатьНажатие(Элемент)
	ТекущийНомерКолонки = ЭлементыФормы.ПредварительныйПросмотр.ТекущаяОбласть.Лево;
	СвязатьРазвязатьКолонки(ТекущийНомерКолонки, Ложь);
КонецПроцедуры

Процедура ПредварительныйПросмотрВыбор(Элемент, Область, СтандартнаяОбработка)
	ТекущийНомерКолонки = ЭлементыФормы.ПредварительныйПросмотр.ТекущаяОбласть.Лево;
	СвязатьРазвязатьКолонки(ТекущийНомерКолонки, Истина);
КонецПроцедуры

Процедура ОсновныеДействияФормыПрофильДалее(Кнопка)
	ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.ДопНастройки; 
КонецПроцедуры







Процедура СвязатьРазвязатьКолонки(ТекущийНомерКолонки, ДействиеСвязать)
	
	Если ДействиеСвязать Тогда
		// нужно проверить а не связанно ли в других колонках текущая.
		ЭлементыФормы.СоответствиеКолонок.ТекущаяСтрока.Значение = ТекущийНомерКолонки;
	Иначе 
		ЭлементыФормы.СоответствиеКолонок.ТекущаяСтрока.Значение = 0;
	КонецЕсли;
	
КонецПроцедуры




//======================================================================================================================
// Обработчики кнопок на странице Доп Настройки


Процедура КоманднаяПанель2ЗаполнитьОсновныеРеквизиты(Кнопка)
	
	ПервичнаяНастройка();
	
	ЗаполнитьСоответствиеКолонок(Ложь);
	
КонецПроцедуры

Процедура НастройкиПоискаПриИзмененииФлажка(Элемент, Колонка)
	ЗаполнитьСоответствиеКолонок(Ложь);
КонецПроцедуры

Процедура ОсновныеДействияФормы1ОсновныеДействияФормыВыполнить(Кнопка)
	ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Обработка; 
	ЗагрузитьДанныеДляОбработки();
КонецПроцедуры






Процедура ПервичнаяНастройка(ПолныйСостав = Ложь)
	
	Перем Реквизит, РекНоменклатура, СписокРеквизитИспользования, СтрокаНастройкиПоиска, ТекНастройка;
	
	НастройкиПоиска.Очистить();
	
	РекНоменклатура = Метаданные.Справочники.Номенклатура.Реквизиты;
	
	СписокРеквизитИспользования = ПолучитьЗаготовкиНастроек(ПолныйСостав);
	
	Для каждого Реквизит Из РекНоменклатура Цикл
		
		ТекНастройка = СписокРеквизитИспользования.НайтиПоЗначению(Реквизит.Имя);
		
		Если ТекНастройка <> Неопределено Тогда
			
			СтрокаНастройкиПоиска = НастройкиПоиска.Добавить();
			СтрокаНастройкиПоиска.Наименование =  Реквизит.Имя;
			СтрокаНастройкиПоиска.Загружать = (ТекНастройка.Картинка = БиблиотекаКартинок.ЗагрузитьИзменения);
			СтрокаНастройкиПоиска.ИспользоватьРеадактирование = ТекНастройка.Пометка;
			СтрокаНастройкиПоиска.НастройкиПоиска = ТекНастройка.Представление;			
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьСоответствиеКолонок(Очищать= Истина)
	
	Если Очищать Тогда
		СоответствиеКолонок.Очистить();
	КонецЕсли; 	
	
	Для каждого СтрокаНастройки Из НастройкиПоиска Цикл
		
		НайденСтрокаСоотведствие = СоответствиеКолонок.Найти(СтрокаНастройки.Наименование,"Наименование");		
		
		Если СтрокаНастройки.Загружать Тогда
			
			Если НайденСтрокаСоотведствие = Неопределено Тогда
				
				СтрокаСоответствиеКолонок = СоответствиеКолонок.Добавить();
				СтрокаСоответствиеКолонок.Наименование =  СтрокаНастройки.Наименование;
				
			КонецЕсли;
			
		Иначе
			
			Если НайденСтрокаСоотведствие <> Неопределено Тогда
				СоответствиеКолонок.Удалить(НайденСтрокаСоотведствие.НомерСтроки -1);
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры //ЗаполнитьСоответствиеКолонок();

Функция ПолучитьЗаготовкиНастроек(ПолныйСостав)
	СписЗначений = Новый СписокЗначений();
	
	// для редактирования данных в любых ситуациях
			   //Добавить(ИмяРеквизита, ИспользоватьПоиск , ИспользоватьРеадактирование, <Картинка>) 
	ЗагружатьКартинка = БиблиотекаКартинок.ЗагрузитьИзменения;		   
	СписЗначений.Добавить("Артикул","Справочники.Номенклатура.НайтиПоРеквизиту(""Артикул"", СтрокаТаблицы[ПолучитьНомерКолонки(""Артикул"")]);", Ложь, ЗагружатьКартинка);
	СписЗначений.Добавить("НаименованиеПолное","",Истина, ЗагружатьКартинка);
	СписЗначений.Добавить("НоменклатурнаяГруппа","", Истина);
	СписЗначений.Добавить("НомерГТД","",Истина);
	СписЗначений.Добавить("ОсновнойПоставщик","", Истина);
	СписЗначений.Добавить("ОтветственныйМенеджерЗаПокупки","", Истина);
	СписЗначений.Добавить("СтавкаНДС","", Истина);
	СписЗначений.Добавить("СтранаПроисхождения","", Истина);
	СписЗначений.Добавить("ЦеноваяГруппа","", Истина);
	
	//СписЗначений.Добавить("ДополнительноеОписаниеНоменклатуры","", Истина);
	
	СписЗначений.Добавить("БазоваяЕдиницаИзмерения","", Истина); // поиск ?
	
	СписЗначений.Добавить("АртикулПроизводителя","", Истина);
	СписЗначений.Добавить("Дубликат","", Истина, ЗагружатьКартинка);
	
	//СписЗначений.Добавить("КатегорияПродаж","", Ложь);
	
	СписЗначений.Добавить("НомерПоКаталогу","", Истина, ЗагружатьКартинка);
	СписЗначений.Добавить("КоличествоВУпаковке","", Истина);
	СписЗначений.Добавить("Сертификат","", Истина);
	//СписЗначений.Добавить("АльтернативнаяГруппа","", Истина);
	//СписЗначений.Добавить("ПоисковыеТеги","", Истина);
	СписЗначений.Добавить("КратностьОтгрузки","", Истина);
	СписЗначений.Добавить("ПроизводительПоКаталогу","", Истина);
	СписЗначений.Добавить("Бренд","", Истина);
	СписЗначений.Добавить("Производитель","", Истина);
	//СписЗначений.Добавить("КодТНВЭД","", Истина);
	
	// подумать как к
	СписЗначений.Добавить("Код","Справочники.Номенклатура.НайтиПоКоду(СтрокаТаблицы[ПолучитьНомерКолонки(""Код"")]);", Ложь);
	СписЗначений.Добавить("Наименование","", Ложь);
	//СписЗначений.Добавить("АртикулБренда","", Ложь);
	//СписЗначений.Добавить("АртикулБренда","", Ложь);
	
	Если ПолныйСостав Тогда
		СписЗначений.Добавить("СтатьяЗатрат", "", Ложь);
		СписЗначений.Добавить("Весовой", "", Ложь);
		СписЗначений.Добавить("ВестиПартионныйУчетПоСериям", "", Ложь);
		СписЗначений.Добавить("ВестиУчетПоСериям", "", Ложь);
		СписЗначений.Добавить("ВестиУчетПоХарактеристикам", "", Ложь);
		СписЗначений.Добавить("ЕдиницаДляОтчетов", "", Ложь);
		СписЗначений.Добавить("ЕдиницаХраненияОстатков", "", Ложь);
		СписЗначений.Добавить("Комментарий", "", Ложь);
		СписЗначений.Добавить("Набор", "", Ложь);
		СписЗначений.Добавить("ОсновноеИзображение", "", Ложь);
		СписЗначений.Добавить("Услуга", "", Ложь);
		СписЗначений.Добавить("НоменклатурнаяГруппаЗатрат", "", Ложь);
		СписЗначений.Добавить("ВестиСерийныеНомера", "", Ложь);
		СписЗначений.Добавить("Комплект", "", Ложь);
		СписЗначений.Добавить("ЕдиницаИзмеренияМест", "", Ложь);
		СписЗначений.Добавить("АлкогольнаяПродукция", "", Ложь);
		СписЗначений.Добавить("ОбъемДАЛ", "", Ложь);
		СписЗначений.Добавить("АртикулДляПодбора", "", Ложь);
		СписЗначений.Добавить("КодИ", "", Ложь);
		СписЗначений.Добавить("КодЭЗ", "", Ложь);
		СписЗначений.Добавить("ОсновнойШтрихКод", "", Ложь);
		СписЗначений.Добавить("ПозицияДляГруппировки", "", Ложь);
		СписЗначений.Добавить("КатегорияНоменклатуры", "", Ложь);
		СписЗначений.Добавить("ВесовойКоэффициентВхождения", "", Ложь);
		СписЗначений.Добавить("ВидАлкогольнойПродукцииЕГАИС", "", Ложь);
		СписЗначений.Добавить("Крепость", "", Ложь);
		СписЗначений.Добавить("ИмпортнаяАлкогольнаяПродукция", "", Ложь);
		СписЗначений.Добавить("ПроизводительИмпортерАлкогольнойПродукции", "", Ложь);		
	КонецЕсли;	
	
	Возврат СписЗначений;
	
КонецФункции






//======================================================================================================================
// Обработчики кнопок на странице Обработка

Процедура  ЗагрузитьДанныеДляОбработки()
	
	СоздатьКолонкиДанные();
	
	
    
КонецПроцедуры //

Процедура СоздатьКолонкиДанные()
	
	Данные.Колонки.Очистить();
	
	Для каждого СтрокаНастройки Из НастройкиПоиска Цикл
		Если СтрокаНастройки.ИспользоватьРеадактирование Тогда
			ТипДанныхКолонки = ПолучитьТипРеквизита(СтрокаНастройки.Наименование);
			ШиринаКолонки = ПолучитьШиринуКолонки(ТипДанныхКолонки);
			Данные.Колонки.Добавить(СтрокаНастройки.Наименование, ТипДанныхКолонки,СтрокаНастройки.Наименование,ШиринаКолонки)
		КонецЕсли;	
	КонецЦикла;
	
	ЭлементыФормы.Данные.СоздатьКолонки();
	
КонецПроцедуры //СоздатьКолонкиДанные

Функция ПолучитьТипРеквизита()
		
КонецФункции





